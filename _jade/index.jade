include ./includes/_slide

doctype html
html(lang="en")
  include ./includes/_head
  body
    .reveal
      .slides
        // Intro
        +group()
          section
            h1 Tug Your Site
            h1 Into CI
            hr
            h2 With Tugboat

          section
            h1
              img(data-src="images/lullabot_128.png").plain
              | Lullabot
            img(data-src="images/lullabot.jpg")
            p Strategy // Design // Development
            small We create digital experiences for the world's best brands.

          +slide("Chris Albrecht")
            h2 Developer
            hr
            ul.none
              li
                img(src="images/icons/SVG/mail.svg").icon
                | chris@lullabot.com
              li
                img(src="images/icons/SVG/twitter.svg").icon
                | @ChrisAlbrecht
              li
                img(src="images/icons/SVG/drupal.svg").icon
                | drupal.org/u/KeyboardCowboy

        +group()
          +slide("The Tour")
            ul
              li.fragment What is CI?
              li.fragment Typical Development Workflow
              li.fragment Drupal's Difficulties
              li.fragment Lullabot's Process
              li.fragment Tugboat to the Rescue
              li.fragment Demo?
              li.fragment Q&A?

        +group("What is Continuous Integration (CI)?")
          +slide("Definition")
            p Merging multiple development lines of code into a mainline on a daily basis.
            p.fragment A DAILY BASIS?!
            p.fragment More of an approach to rapid development

          +slide("Tools & Services")
            p
              img(src="images/jenkins.png").icon.med
              | Jenkins
            p
              img(src="images/travis.png").icon.med
              | Travis CI
            p
              img(src="images/circleci.png").icon.med
              | Circle CI

          +slide("Not Really CI")
            p.fragment "Frequent Integration"
            p.fragment "Continuous Delivery"
            p.fragment Rapid Deployment
            p.fragment Ensure the mainline is always in a deployable state

        +group("Development Ecosystem")
          +slide("Simple Setup")
            ul
              li.fragment Local or Dev
              li.fragment Staging or Testing
              li.fragment Production
            hr.fragment
            ul
              li.fragment Less overhead
              li.fragment Higher risk
              li.fragment Quicker deployments

          +slide("Advanced Setup")
            ul
              li.fragment Local
              li.fragment Dev or Integration
              li.fragment QA
              li.fragment Stage/Test/UAT
              li.fragment Production
            hr.fragment
            ul
              li.fragment More overhead
              li.fragment Less risk
              li.fragment Slower deployments

          +slide("Drupal")
            .question
              p What is the most frustrating part of building a site in Drupal?

            ul
              li.fragment PHP, MySQL, Apache/NGINX
              li.fragment Admin UI for Developers AND End Users
              li.fragment In D7, Content & Config in DB
              li.fragment Large volume of code with lots of working parts
              li.fragment Multiple ways to accomplish one thing
              br
              h3.fragment.center How do you manage it?

        +group("Our Process")
          +slide("Config in Code")
            p.fragment Extensive use of Features in D7
            p.fragment D8 Config Management
          +slide("Disable UI Modules")
            ul.fragment
              li Field UI
              li Views UI
              li Rules Admin
          +slide("All Config in Dev")
            ul.fragment
              li Features
              li Update hooks
              li Custom modules
          +slide("Extensive Review*")
            .question
              p What’s the worst thing that can happen in your client’s eyes?

            ul
              li.fragment GitHub Pull Request Workflow
              li.fragment Peer Review
              li.fragment QA
              li.fragment UAT

            h3.fragment Each adds time to deployment
            .footnote *Depends on client

        +group("Pain Points")
          +slide("Testing Install Processes")
            .question
              p What’s the largest database you’ve had to work with?
            ul
              li.fragment "It worked on my Local!"
              li.fragment "How recent is your DB?"
              li.fragment "Do you have X running?"
              li.fragment "What if the deployment fails?"
          +slide("Epic Tickets")
            ul
              li.fragment Showing progress updates
              li.fragment Multiple developers pushing code to one server
              li.fragment Testing/debugging on actual mobile devices
          +slide("Steak Holders")
            img(src="http://mentalfloss.com/sites/default/legacy/blogs/wp-content/uploads/2009/11/Barney-Rubble-Steak-240x300.jpg").center

          +slide("Stakeholders")
            .left
              img(src="images/oatmeal1.png")
            ul.left-gutter
              li.fragment Designers
                br
                small "This doesn't work on my phone. Change it."
              li.fragment Marketing
                br
                small "Why are the ads below the fold? Change it."
              li.fragment SEO
                br
                small "AJAX content isn't being indexed. Change it."
              li.fragment Management
                br
                small "They said pie but meant cake. Change it."
              li.fragment CEO
                br
                small "Make the cake-pie design POP! It needs sizzle."

            .footnote http://theoatmeal.com/comics/design_hell

          +slide("Stakeholders")
            h3 Wouldn't it be great if we could avoid this?
            img(src="images/software_engineering.png").center


        +group("We Built Tugboat")
          +slide("Tugboat")
            img(src="images/tugboat_overview.png").center
          +slide("Listen for PRs")
          +slide("Fully Functional Site")
          +slide("Sharable URL")
          +slide("Super Fast Builds")

        +group("Problems Solved")
          +slide("Push and Forget")
            ul
             li.fragment Automated builds
             li.fragment Comments success/failures
             li.fragment Work on your next ticket
          +slide("Clean Locals")
            ul
              li.fragment Don't checkout other feature branches
              li.fragment No local code conflicts
              li.fragment Keep local database clean
          +slide("Fast DB Resets")
            ul
              li.fragment Tugboat DBs reset FAST
              li.fragment Test installation processes
          +slide("Configuration mimics PROD")
            ul
              li.fragment More accurate representation
              li.fragment Catch errors early in the process
          +slide("Prevents Conflict")
            ul
              li.fragment Full site for every ticket
              li.fragment Easily support multiple devs
          +slide("Show Stakeholders")
            .question
              p On which server are your stakeholders usually finding bugs?

            ul
              li.fragment Real URLs
              li.fragment Prod + Your Ticket
              li.fragment Log in, test features/fixes
          +slide("In Summary")
            ul
              li.fragment Less time resetting, more time developing
              li.fragment Less risk of merge conflict
              li.fragment More accurate testing conditions
              li.fragment Iterative feedback
              br
              h2.fragment.center FASTER, CLEANER DEVELOPMENT

        +group("There's More!")
          +slide("Integration")
            ul.fragment
              li GitHub
              li BitBucket
              li More coming soon
          +slide("Versatility")
            ul.fragment
              li Regular Drupal
              li Multisite Drupal
              li Any linux-based system
          +slide("UI Tools")
            ul.fragment
              li Summary Overview
              li Terminals
              li Logging
              li Reset/Rebuild
              li Locking Builds
              li Kill Environments
          +slide("Plugins")
            ul
              li.fragment Email Notifications
              li.fragment Redeploy
              li.fragment Test Suite
              li.fragment Visual Diffs

          section
            h1.fragment.shrink Demo?
            h1.fragment.fade-in DEMO!


      footer#preso-footer
        span Powered by Lullabot

  include ./includes/_closing
